# Error messages
ap.invalid.text.INVALID_COMMAND = Error 4001 \: Invalid Command Syntax\nSuggested Solution \: For more information on available commands, type \: help ap
ap.invalid.text.INVALID_DELETE_SYNTAX_RESPONSE = Error 4001 \: Invalid Command Syntax\nSuggested Solution \: Type this command for correct syntax \: help ap delete
ap.invalid.text.INVALID_IMPORT_SYNTAX_RESPONSE = Error 4001 \: Invalid Command Syntax\nSuggested Solution \: Type this command for correct syntax \: help ap import
ap.invalid.text.INVALID_ORDER_SYNTAX_RESPONSE = Error 4001 \: Invalid Command Syntax\nSuggested Solution \: Type this command for correct syntax \: help ap order
ap.invalid.text.INVALID_STATUS_SYNTAX_RESPONSE = Error 4001 \: Invalid Command Syntax\nSuggested Solution \: Type this command for correct syntax \: help ap status
ap.invalid.text.INVALID_UNORDER_SYNTAX_RESPONSE = Error 4001 \: Invalid Command Syntax\nSuggested Solution \: Type this command for correct syntax \: help ap unorder
ap.invalid.text.INVALID_VIEW_SYNTAX_RESPONSE = Error 4001 \: Invalid Command Syntax\nSuggested Solution \: Type this command for correct syntax \: help ap view
ap.invalid.text.INVALID_UPLOAD_SYNTAX_RESPONSE = Error 4001 \: Invalid Command Syntax\nSuggested Solution \: Type this command for correct syntax \: help ap upload
ap.invalid.text.PROJECT_DOES_NOT_EXIST_RESPONSE = Error 3001 \: Project invalidProjectName does not exist\nSuggested Solution \: Provide a valid project name.
ap.invalid.text.NODE_DOES_NOT_EXIST_RESPONSE = Error 3001 \: Node invalidNodeName does not exist\nSuggested Solution \: Provide a valid node name
ap.access.control.text.NOT_AUTHORIZED = Error 5001 \: Insufficient access rights to perform the operation\nSuggested Solution \: If the operation is required to be performed by the current user, the user profile must be updated by the system administrator

ap.view.node.duplicate.found = Duplicate nodes are found with node name : %s

# Help messages
ap.expected.help.text.AP = delete\: Delete an auto-provisioning project or node\n"ap" "delete" <-p projectName | -n nodeName>\ndownload\: Download an artifact or schema for a specified node. Allowed values for artifactName are 'SiteInstall'\n"ap" "download" {-i|-o} -n <nodeName>, "ap" "download" -x -t <nodeType> (-v mimVersion)\nimport\: Import an auto-provisioning project zip\n"ap" "import" file\:<zipProjectFileName>\norder\: Order an integration for a specified project or node\n"ap" "order" (-p <projectName> | -n <nodeName> )\nstatus\: Show integration status for projects, a specified project or a stated node\n"ap" "status" [-p <projectName> | -n <nodeName>]\nunorder\: Remove the integration data generated during Order Integration for a specified node\n"ap" "unorder" -n <nodeName>\nupload\: Upload an artifact file for a specified node name. Valid artifacts are\: 'SiteInstall', 'SiteEquipment', 'SiteBasic', 'Transport', 'Radio', 'PostIntegration'\n"ap" "upload" NODE_NAME ARTIFACT_TYPE FILE_NAME\nview\: Shows list of auto-provisioning projects/nodes and their details\n"ap" "view" [-p <projectName> | -n <nodeName>]
ap.expected.help.text.DELETE = delete\: Delete an auto-provisioning project or node\n"ap" "delete" <-p projectName | -n nodeName>
ap.expected.help.text.DOWNLOAD = download\: Download an artifact or schema for a specified node. Allowed values for artifactName are 'SiteInstall'\n"ap" "download" {-i|-o} -n <nodeName>, "ap" "download" -x -t <nodeType> (-v mimVersion)
ap.expected.help.text.IMPORT = import\: Import an auto-provisioning project zip\n"ap" "import" file\:<zipProjectFileName>
ap.expected.help.text.ORDER = order\: Order an integration for a specified project or node\n"ap" "order" (-p <projectName> | -n <nodeName> )
ap.expected.help.text.STATUS = status\: Show integration status for projects, a specified project or a stated node\n"ap" "status" [-p <projectName> | -n <nodeName>]
ap.expected.help.text.UNORDER = unorder\: Remove the integration data generated during Order Integration for a specified node\n"ap" "unorder" -n <nodeName>
ap.expected.help.text.VIEW = view\: Shows list of auto-provisioning projects/nodes and their details\n"ap" "view" [-p <projectName> | -n <nodeName>]

# Validate project message
ap.validate.result.message.successful = Successful validation of %s
ap.validate.result.message.failure = Error(s) found validating project file %s